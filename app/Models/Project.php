<?php

namespace App\Models;

use Encore\Admin\Facades\Admin;
use Illuminate\Database\Eloquent\Model;
use Illuminate\Database\Eloquent\Relations\BelongsToMany;
use Illuminate\Database\Eloquent\Relations\HasOne;
use Encore\Admin\Auth\Database\Menu;
use Encore\Admin\Auth\Database\Permission;
use Encore\Admin\Auth\Database\Role;
use Illuminate\Support\Facades\DB;
class Project extends Model
{
    //
    protected $fillable=[
        'id','name','start_date','end_date','person_liable',
        'upload_authorization_key','download_authorization_key','content',
    ];

    public function admin_users(): BelongsToMany
    {
        $pivotTable = 'project_admin_user';

        $relatedModel=Admin::user();
        return $this->belongsToMany($relatedModel, $pivotTable, 'project_id', 'user_id');

    }

    public function admin_menu(): HasOne
    {
        $relatedModel=Admin::menu();
        return $this->hasOne($relatedModel,'title','name');
    }

    public static function getOldName($id)
    {
        $project=new Project();
        $name=$project->find($id)->name;

        return $name;
    }

    protected $old_name;

    public static function boot()
    {
        parent::boot(); // TODO: Change the autogenerated stub
        static:: saved(function ($model){
            $menu=new Menu();
            $project=new Project();

            global $old_name;
            $old_name=$model->name;

            $project_id=$model->id;
            //$project_id=$project_id->getPdo()->lastInsertId();
            $parent_id=9;
            $order=$menu->where('parent_id','=','9')->max('order')+1;
            $title=$model->name;
            $icon='fa-sun-o';
            $uri='/file/'.$title.'/'.$project_id;
            $per=$model->name.'_'.$project_id;
            $menu->parent_id=$parent_id;
            $menu->order=$order;
            $menu->title=$title;
            $menu->icon=$icon;
            $menu->uri=$uri;
            $menu->permission=$per;
            $menu->save();


            $role=new Role();
            $role->name=$model->name.'_'.$project_id;
            $role->slug=$model->name.'_'.$project_id;
            $role->save();

            $permission=new Permission();
            $name=$model->name.'_'.$project_id;
            $slug=$model->name.'_'.$project_id;
            $http_method='';
            $http_path=$uri;
            $permission->name=$name;
            $permission->slug=$slug;
            $permission->http_method=$http_method;
            $permission->http_path=$http_path;
            $permission->save();

        });

        static::deleted(function ($model){
            $menu=new Menu();
            $title=$model->name;
            $menu->where('title','=',$title)->where('parent_id','=','9')->delete();

            $pemission=new Permission();
            $project=new Project();
            $project_id=$model->id;
            $name=$model->name.'_'.$project_id;
            $pemission->where('name','=',$name)->delete();

            $role=new Role();
            $role_name=$model->name.'_'.$project_id;
            $role->where('name','=',$role_name)->delete();

        });


        static::updating(function ($model){
            $menu=new Menu();
            $title=$model->name;


            $project=new Project();
            $project_id=$model->id;
            $pro_name=self::getOldName($project_id);


            $pemission=new Permission();
            $old_per_name=$pro_name.'_'.$project_id;
            $new_per_name=$model->name.'_'.$project_id;;
            $pemission->where('name','=',$old_per_name)
                ->update(
                    ['name'=>$new_per_name]
                );

            $role=new Role();
            $old_role_name=$pro_name.'_'.$project_id;
            $new_role_name=$model->name.'_'.$project_id;
            $role->where('name','=',$old_per_name)
                ->update(
                    ['name'=>$new_role_name]
                );

        });
    }

}
